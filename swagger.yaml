swagger: '2.0'
info:
  version: '1.0'
  title: BANKA APP
  description: Banka is a light-weight core banking application that powers banking operations like account creation, customer deposit and withdrawals. This app is meant to support a single bank, where users can signup and create bank accounts online, but must visit the branch to withdraw or deposit money..
  contact: {}
host: bankaapplication.herokuapp.com
basePath: /api/v1
schemes:
- https
consumes:
- application/json
produces:
- application/json
paths:
  /auth/signup:
    post:
      description: Allows users to signup and create an account
      summary: signup
      tags:
      - Auth
      operationId: AuthSignupPost
      deprecated: false
      produces:
      - application/json; charset=utf-8
      parameters:
      - name: Content-Type
        in: header
        required: true
        type: string
        description: ''
      - name: Body
        in: body
        required: true
        description: ''
        schema:
          $ref: '#/definitions/signupRequest'
      responses:
        201:
          description: ''
          schema:
            $ref: '#/definitions/signupwithvaliddata'
          examples:
            application/json; charset=utf-8:
              status: 201
              data:
              - token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6Imdlb291eXVkb25lc3NAZ21haWwuY29tIiwiaWQiOjY2LCJpYXQiOjE1NTYzODI2MTYsImV4cCI6MTU1NjQ2OTAxNn0.EHvRjUExsMIMzt1lTt_S9PZlXvA1FBK0JUq83h2RiPk
                firstName: Goodness
                lastName: Greatness
                email: geoouyudoness@gmail.com
                type: client
          headers:
            Server:
              type: string
              default: Cowboy
            Connection:
              type: string
              default: keep-alive
            X-Powered-By:
              type: string
              default: Express
            Content-Length:
              type: string
              default: 316
            Etag:
              type: string
              default: W/"13c-iEdiczNYGpaVx/RbmW//H1PvGwo"
            Date:
              type: string
              default: Sat, 27 Apr 2019 16:30:16 GMT
            Via:
              type: string
              default: 1.1 vegur
        400:
          description: Bad Request
          schema:
            $ref: '#/definitions/signupinvaliddata'
          examples:
            application/json:
              status: 400
              errors:
                firstname: First Name field is required
                lastname: Last Name field is required
                email: Email field is required
        409:
          description: Conflict
          schema:
            $ref: '#/definitions/Admincancreateadminorstaffaccount'
          examples:
            application/json:
              status: 409
              error: User already exist
  /auth/signin:
    post:
      description: Users can login to their BANKA Account
      summary: signin
      tags:
      - Auth
      operationId: AuthSigninPost
      deprecated: false
      produces:
      - application/json; charset=utf-8
      parameters:
      - name: Content-Type
        in: header
        required: true
        type: string
        description: ''
      - name: Body
        in: body
        required: true
        description: ''
        schema:
          $ref: '#/definitions/signinRequest'
      responses:
        200:
          description: ''
          schema:
            $ref: '#/definitions/signinvaliddata'
          examples:
            application/json; charset=utf-8:
              status: 200
              data:
              - token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6Imlkb3d1YWRlbGVrZUBnbWFpbC5jb20iLCJpZCI6MTgsImlhdCI6MTU1NjM4Mjg0MSwiZXhwIjoxNTU2NDY5MjQxfQ.Xj4AXSIwcVJcnrMAJuQe-e_9M0VqhH4bICXRTxnF9bs
                firstName: Idowu
                lastName: Adeleke
                email: idowuadeleke@gmail.com
                type: staff
          headers:
            Server:
              type: string
              default: Cowboy
            Connection:
              type: string
              default: keep-alive
            X-Powered-By:
              type: string
              default: Express
            Content-Length:
              type: string
              default: 308
            Etag:
              type: string
              default: W/"134-RgwoVU6UxUCHMvihk7fcRAM8KIw"
            Date:
              type: string
              default: Sat, 27 Apr 2019 16:34:01 GMT
            Via:
              type: string
              default: 1.1 vegur
        400:
          description: Bad Request
          schema:
            $ref: '#/definitions/signinwithoutemail'
          examples:
            application/json:
              status: 400
              errors:
                email: Email field is required
  /accounts:
    post:
      description: Authorized Users can create a bank account
      summary: Create Bank Account
      tags:
      - Accounts
      operationId: AccountsPost
      deprecated: false
      produces:
      - application/json; charset=utf-8
      parameters:
      - name: Content-Type
        in: header
        required: true
        type: string
        description: ''
      - name: token
        in: header
        required: true
        type: string
        description: ''
      - name: Body
        in: body
        required: true
        description: ''
        schema:
          type: object
      responses:
        201:
          description: ''
          schema:
            $ref: '#/definitions/CreateBankAccount'
          examples:
            application/json; charset=utf-8:
              status: 201
              data:
              - id: 25
                accountNumber: 1401
                createdOn: 2019-04-27T16:36:44.95Z
                owner: 18
                type: savings
                status: draft
                balance: 400
          headers:
            Server:
              type: string
              default: Cowboy
            Connection:
              type: string
              default: keep-alive
            X-Powered-By:
              type: string
              default: Express
            Content-Length:
              type: string
              default: 152
            Etag:
              type: string
              default: W/"98-pvS5jBgUzRoTJw9Y8Ft6TjaqKm0"
            Date:
              type: string
              default: Sat, 27 Apr 2019 16:36:44 GMT
            Via:
              type: string
              default: 1.1 vegur
        400:
          description: Bad Request
          schema:
            $ref: '#/definitions/CreateBankAccountwithnodata'
          examples:
            application/json:
              status: 400
              errors:
                type: type field must be a string
                balance: balance field is must be a number
    get:
      description: Admin and staff can get all bank accounts
      summary: Get All Bank Accounts
      tags:
      - Accounts
      operationId: AccountsGet
      deprecated: false
      produces:
      - application/json; charset=utf-8
      parameters:
      - name: token
        in: header
        required: true
        type: string
        description: ''
      responses:
        200:
          description: ''
          schema:
            $ref: '#/definitions/GetAllBankAccounts'
          headers:
            Server:
              type: string
              default: Cowboy
            Connection:
              type: string
              default: keep-alive
            X-Powered-By:
              type: string
              default: Express
            Content-Length:
              type: string
              default: 2814
            Etag:
              type: string
              default: W/"afe-FY3xBXlD9qxexhjQgVA3VDJ5kOU"
            Date:
              type: string
              default: Sat, 27 Apr 2019 16:38:36 GMT
            Via:
              type: string
              default: 1.1 vegur
        403:
          description: Forbidden
          schema:
            $ref: '#/definitions/Admincancreateadminorstaffaccount'
          examples:
            application/json:
              status: 403
              error: Unauthorized!, you have to signin
  /accounts/{accountNumber}:
    get:
      description: Admin,staff or Authourized user can get a specific bank account details
      summary: Get Specific Bank Account
      tags:
      - Accounts
      operationId: AccountsByAccountNumberGet
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: accountNumber
        in: path
        required: true
        type: string
        description: ''
      - name: token
        in: header
        required: true
        type: string
        description: ''
      responses:
        200:
          description: ''
          headers: {}
        400:
          description: Bad Request
          schema:
            $ref: '#/definitions/GetaSpecificTransactionDetail1'
          examples:
            application/json:
              status: 400
              errors:
                type: account number must be an integer
        404:
          description: Not Found
          schema:
            $ref: '#/definitions/Admincancreateadminorstaffaccount'
          examples:
            application/json:
              status: 404
              error: account number doesn't exist
    delete:
      description: Admin and staff can delete a bank account
      summary: Delete Bank Account
      tags:
      - Accounts
      operationId: AccountsByAccountNumberDelete
      deprecated: false
      produces:
      - application/json; charset=utf-8
      parameters:
      - name: accountNumber
        in: path
        required: true
        type: string
        description: ''
      - name: token
        in: header
        required: true
        type: string
        description: ''
      responses:
        200:
          description: ''
          schema:
            $ref: '#/definitions/DeleteBankAccount'
          examples:
            application/json; charset=utf-8:
              status: 200
              message: Account successfully deleted
          headers:
            Server:
              type: string
              default: Cowboy
            Connection:
              type: string
              default: keep-alive
            X-Powered-By:
              type: string
              default: Express
            Content-Length:
              type: string
              default: 55
            Etag:
              type: string
              default: W/"37-Ey6xkeOIHErtysb982Ky/zmTnKc"
            Date:
              type: string
              default: Sat, 27 Apr 2019 16:43:21 GMT
            Via:
              type: string
              default: 1.1 vegur
        404:
          description: Not Found
          schema:
            $ref: '#/definitions/Admincancreateadminorstaffaccount'
          examples:
            application/json:
              status: 404
              error: account number doesn't exist
    patch:
      description: Admin and staff can activate a bank account
      summary: Activate Bank Account
      tags:
      - Accounts
      operationId: AccountsByAccountNumberPatch
      deprecated: false
      produces:
      - application/json; charset=utf-8
      parameters:
      - name: accountNumber
        in: path
        required: true
        type: string
        description: ''
      - name: Content-Type
        in: header
        required: true
        type: string
        description: ''
      - name: token
        in: header
        required: true
        type: string
        description: ''
      - name: Body
        in: body
        required: true
        description: ''
        schema:
          $ref: '#/definitions/ActivateBankAccountRequest'
      responses:
        200:
          description: ''
          schema:
            $ref: '#/definitions/ActivateBankAccount'
          examples:
            application/json; charset=utf-8:
              status: 200
              data:
              - accountNumber: 999
                status: active
          headers:
            Server:
              type: string
              default: Cowboy
            Connection:
              type: string
              default: keep-alive
            X-Powered-By:
              type: string
              default: Express
            Content-Length:
              type: string
              default: 63
            Etag:
              type: string
              default: W/"3f-8og/i00AGiAx4o7AYXoeR2EiyTs"
            Date:
              type: string
              default: Sat, 27 Apr 2019 16:44:20 GMT
            Via:
              type: string
              default: 1.1 vegur
        400:
          description: Bad Request
          schema:
            $ref: '#/definitions/DeactivateBankAccount1'
          examples:
            application/json:
              status: 400
              errors:
                updatestatus: status must be one of [dormant, active]
  /user/{email}/accounts:
    get:
      description: Admin and staff can get a specific user bank account
      summary: Get a User Bank Account
      tags:
      - Accounts
      operationId: UserAccountsByEmailGet
      deprecated: false
      produces:
      - application/json; charset=utf-8
      parameters:
      - name: email
        in: path
        required: true
        type: string
        description: ''
      - name: token
        in: header
        required: true
        type: string
        description: ''
      responses:
        200:
          description: ''
          schema:
            $ref: '#/definitions/GetaUserBankAccount'
          headers:
            Server:
              type: string
              default: Cowboy
            Connection:
              type: string
              default: keep-alive
            X-Powered-By:
              type: string
              default: Express
            Content-Length:
              type: string
              default: 503
            Etag:
              type: string
              default: W/"1f7-8+2tpuOzUdXT446gQ8IKdNyQy8w"
            Date:
              type: string
              default: Sat, 27 Apr 2019 16:47:01 GMT
            Via:
              type: string
              default: 1.1 vegur
        400:
          description: Bad Request
          schema:
            $ref: '#/definitions/Admincancreateadminorstaffaccount'
          examples:
            application/json:
              status: 400
              error: enter a valid email address
        404:
          description: Not Found
          schema:
            $ref: '#/definitions/Admincancreateadminorstaffaccount'
          examples:
            application/json:
              status: 404
              error: no account found with given email address
  /transactions/{accountNumber}/credit:
    post:
      description: staff(cashier) can credit a bank account
      summary: Credit Bank Account
      tags:
      - Transactions
      operationId: TransactionsCreditByAccountNumberPost
      deprecated: false
      produces:
      - application/json; charset=utf-8
      parameters:
      - name: accountNumber
        in: path
        required: true
        type: string
        description: ''
      - name: Content-Type
        in: header
        required: true
        type: string
        description: ''
      - name: token
        in: header
        required: true
        type: string
        description: ''
      - name: Body
        in: body
        required: true
        description: ''
        schema:
          $ref: '#/definitions/CreditBankAccountRequest'
      responses:
        200:
          description: ''
          schema:
            $ref: '#/definitions/CreditBankAccount1'
          examples:
            application/json; charset=utf-8:
              status: 200
              data:
              - transactionId: 39
                accountNumber: 1099
                amount: 200
                cashier: 21
                transactionType: credit
                accountBalance: 3319.3499999999999
          headers:
            Server:
              type: string
              default: Cowboy
            Connection:
              type: string
              default: keep-alive
            X-Powered-By:
              type: string
              default: Express
            Content-Length:
              type: string
              default: 145
            Etag:
              type: string
              default: W/"91-3hYEaXEHx579KzNIL3V4N8Np7uY"
            Date:
              type: string
              default: Sat, 27 Apr 2019 16:50:10 GMT
            Via:
              type: string
              default: 1.1 vegur
        400:
          description: Bad Request
          schema:
            $ref: '#/definitions/CreditBankAccount2'
          examples:
            application/json:
              status: 400
              errors:
                amount: amount field is must be a number
        401:
          description: Unauthorized
          schema:
            $ref: '#/definitions/Admincancreateadminorstaffaccount'
          examples:
            application/json:
              status: 401
              error: only cashier can credit account
  /transactions/{accountNumber}/debit:
    post:
      description: Staff cashier can debit a bank account
      summary: Debit Bank Account
      tags:
      - Transactions
      operationId: TransactionsDebitByAccountNumberPost
      deprecated: false
      produces:
      - application/json; charset=utf-8
      parameters:
      - name: accountNumber
        in: path
        required: true
        type: string
        description: ''
      - name: Content-Type
        in: header
        required: true
        type: string
        description: ''
      - name: token
        in: header
        required: true
        type: string
        description: ''
      - name: Body
        in: body
        required: true
        description: ''
        schema:
          $ref: '#/definitions/DebitBankAccountRequest'
      responses:
        200:
          description: ''
          schema:
            $ref: '#/definitions/DebitBankAccount'
          examples:
            application/json; charset=utf-8:
              status: 200
              data:
              - transactionId: 41
                accountNumber: 1099
                amount: 20.050000000000001
                cashier: 21
                transactionType: debit
                accountBalance: 3279.25
          headers:
            Server:
              type: string
              default: Cowboy
            Connection:
              type: string
              default: keep-alive
            X-Powered-By:
              type: string
              default: Express
            Content-Length:
              type: string
              default: 146
            Etag:
              type: string
              default: W/"92-sUjEloTFcGph02DNV/t5K7d76hg"
            Date:
              type: string
              default: Sat, 27 Apr 2019 16:51:47 GMT
            Via:
              type: string
              default: 1.1 vegur
  /transactions/{transactionId}:
    get:
      description: Admin and staff can get a specific account transaction detail
      summary: Get a Specific Transaction Detail
      tags:
      - Transactions
      operationId: TransactionsByTransactionIdGet
      deprecated: false
      produces:
      - application/json; charset=utf-8
      parameters:
      - name: transactionId
        in: path
        required: true
        type: string
        description: ''
      - name: Content-Type
        in: header
        required: true
        type: string
        description: ''
      - name: token
        in: header
        required: true
        type: string
        description: ''
      responses:
        200:
          description: ''
          schema:
            $ref: '#/definitions/GetaSpecificTransactionDetail'
          examples:
            application/json; charset=utf-8:
              status: 200
              data:
              - id: 1
                accountNumber: 999
                createdOn: 2019-04-20T15:54:49.193Z
                type: debit
                amount: 2
                oldBalance: 400
                newBalance: 398
          headers:
            Server:
              type: string
              default: Cowboy
            Connection:
              type: string
              default: keep-alive
            X-Powered-By:
              type: string
              default: Express
            Content-Length:
              type: string
              default: 153
            Etag:
              type: string
              default: W/"99-1HobPAcPNcCj/xJ0YtLfWMi+aDA"
            Date:
              type: string
              default: Sat, 27 Apr 2019 16:52:18 GMT
            Via:
              type: string
              default: 1.1 vegur
        400:
          description: Bad Request
          schema:
            $ref: '#/definitions/GetaSpecificTransactionDetail1'
          examples:
            application/json:
              status: 400
              errors:
                type: transaction id must be an integer
        404:
          description: Not Found
          schema:
            $ref: '#/definitions/Admincancreateadminorstaffaccount'
          examples:
            application/json:
              status: 404
              error: no transaction exist for this id
  /accounts/{accountNumber}/transactions:
    get:
      description: Admin and staff can get a bank account transaction history
      summary: Get Account Transaction History
      tags:
      - Transactions
      operationId: AccountsTransactionsByAccountNumberGet
      deprecated: false
      produces:
      - application/json; charset=utf-8
      parameters:
      - name: accountNumber
        in: path
        required: true
        type: string
        description: ''
      - name: token
        in: header
        required: true
        type: string
        description: ''
      responses:
        200:
          description: ''
          schema:
            $ref: '#/definitions/GetAccountTransactionHistory'
          examples:
            application/json; charset=utf-8:
              status: 200
              data:
              - id: 1
                accountNumber: 999
                createdOn: 2019-04-20T15:54:49.193Z
                type: debit
                amount: 2
                oldBalance: 400
                newBalance: 398
              - id: 2
                accountNumber: 999
                createdOn: 2019-04-20T15:56:15.463Z
                type: debit
                amount: 2
                oldBalance: 400
                newBalance: 398
              - id: 3
                accountNumber: 999
                createdOn: 2019-04-20T15:58:59.887Z
                type: debit
                amount: 2
                oldBalance: 400
                newBalance: 398
              - id: 4
                accountNumber: 999
                createdOn: 2019-04-20T15:59:22.74Z
                type: debit
                amount: 2
                oldBalance: 400
                newBalance: 398
              - id: 5
                accountNumber: 999
                createdOn: 2019-04-20T15:59:42.351Z
                type: debit
                amount: 2
                oldBalance: 398
                newBalance: 396
              - id: 6
                accountNumber: 999
                createdOn: 2019-04-20T16:05:14.287Z
                type: debit
                amount: 2
                oldBalance: 396
                newBalance: 394
              - id: 7
                accountNumber: 999
                createdOn: 2019-04-20T16:05:47.804Z
                type: debit
                amount: 2
                oldBalance: 394
                newBalance: 392
              - id: 8
                accountNumber: 999
                createdOn: 2019-04-20T16:08:22.838Z
                type: credit
                amount: 2
                oldBalance: 392
                newBalance: 394
              - id: 9
                accountNumber: 999
                createdOn: 2019-04-20T16:08:28.606Z
                type: credit
                amount: 2
                oldBalance: 394
                newBalance: 396
              - id: 10
                accountNumber: 999
                createdOn: 2019-04-20T16:08:32.733Z
                type: credit
                amount: 2
                oldBalance: 396
                newBalance: 398
              - id: 38
                accountNumber: 999
                createdOn: 2019-04-27T15:36:34.266Z
                type: credit
                amount: 200
                oldBalance: 398
                newBalance: 598
          headers:
            Server:
              type: string
              default: Cowboy
            Connection:
              type: string
              default: keep-alive
            X-Powered-By:
              type: string
              default: Express
            Content-Length:
              type: string
              default: 1461
            Etag:
              type: string
              default: W/"5b5-lfWRhL+uQNrQ69UpmjteE1T5grM"
            Date:
              type: string
              default: Sat, 27 Apr 2019 16:53:37 GMT
            Via:
              type: string
              default: 1.1 vegur
        404:
          description: Not Found
          schema:
            $ref: '#/definitions/Admincancreateadminorstaffaccount'
          examples:
            application/json:
              status: 404
              error: account number doesn't exist
  /user:
    post:
      description: This endpoint enables admin to create new admin or staff account
      summary: Admin can create admin or staff account
      tags:
      - User
      operationId: UserPost
      deprecated: false
      produces:
      - application/json; charset=utf-8
      parameters:
      - name: token
        in: header
        required: true
        type: string
        description: ''
      - name: Content-Type
        in: header
        required: true
        type: string
        description: ''
      - name: Body
        in: body
        required: true
        description: ''
        schema:
          type: object
      responses:
        201:
          description: ''
          schema:
            $ref: '#/definitions/Admincancreateadminorstaffaccount1'
          examples:
            application/json; charset=utf-8:
              status: 201
              data:
              - token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6ImdvMjJvZGFkbWluQGdtYWlsLmNvbSIsImlkIjo3MSwiaWF0IjoxNTU2Mzg0MTk3LCJleHAiOjE1NTY0NzA1OTd9.mGezZDpIkB8UL6tT1T4M-mDscnDayh9mVb25WQuJs94
                firstName: Good
                lastName: Great
                email: go22odadmin@gmail.com
                type: staff
          headers:
            Server:
              type: string
              default: Cowboy
            Connection:
              type: string
              default: keep-alive
            X-Powered-By:
              type: string
              default: Express
            Content-Length:
              type: string
              default: 302
            Etag:
              type: string
              default: W/"12e-WyoSwvtGHSf/yscblZb6jw0Z9zo"
            Date:
              type: string
              default: Sat, 27 Apr 2019 16:56:37 GMT
            Via:
              type: string
              default: 1.1 vegur
        400:
          description: Bad Request
          schema:
            $ref: '#/definitions/Admincancreateadminorstaffaccount2'
          examples:
            application/json:
              status: 400
              errors:
                firstname: First Name field is required
                lastname: Last Name field is required
                email: Email field is required
                password: Password field is required
                type: Type field is required
                isAdmin: isAdmin field must be a boolean value and is required
        401:
          description: Unauthorized
          schema:
            $ref: '#/definitions/Admincancreateadminorstaffaccount'
          examples:
            application/json:
              status: 401
              error: only admin can create staff or admin account
  /user/resetPassword:
    post:
      description: This endpoint enables users to reset their password
      summary: user can reset password
      tags:
      - User
      operationId: UserResetPasswordPost
      deprecated: false
      produces:
      - application/json; charset=utf-8
      parameters:
      - name: token
        in: header
        required: true
        type: string
        description: ''
      - name: Content-Type
        in: header
        required: true
        type: string
        description: ''
      - name: Body
        in: body
        required: true
        description: ''
        schema:
          $ref: '#/definitions/usercanresetpasswordRequest'
      responses:
        200:
          description: ''
          schema:
            $ref: '#/definitions/usercanresetpassword1'
          examples:
            application/json; charset=utf-8:
              status: 200
              data:
              - newPassword: dele1989
          headers:
            Server:
              type: string
              default: Cowboy
            Connection:
              type: string
              default: keep-alive
            X-Powered-By:
              type: string
              default: Express
            Content-Length:
              type: string
              default: 50
            Etag:
              type: string
              default: W/"32-0M27p5LpPbwRiQLjXufx1ZIjdPE"
            Date:
              type: string
              default: Sat, 27 Apr 2019 16:55:40 GMT
            Via:
              type: string
              default: 1.1 vegur
        400:
          description: Bad Request
          schema:
            $ref: '#/definitions/usercanresetpassword'
          examples:
            application/json:
              status: 400
              errors:
                password: password field must be a string
                confirmPassword: password and confirm password must be the same
definitions:
  signupRequest:
    title: signupRequest
    example:
      firstname: Goodness
      lastname: Greatness
      email: geyudness@gmail.com
      password: dele1989
      type: client
      isAdmin: false
    type: object
    properties:
      firstname:
        type: string
      lastname:
        type: string
      email:
        type: string
      password:
        type: string
      type:
        type: string
      isAdmin:
        type: boolean
    required:
    - firstname
    - lastname
    - email
    - password
    - type
    - isAdmin
  signupwithvaliddata:
    title: signupwithvaliddata
    example:
      status: 201
      data:
      - token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6Imdlb291eXVkb25lc3NAZ21haWwuY29tIiwiaWQiOjY2LCJpYXQiOjE1NTYzODI2MTYsImV4cCI6MTU1NjQ2OTAxNn0.EHvRjUExsMIMzt1lTt_S9PZlXvA1FBK0JUq83h2RiPk
        firstName: Goodness
        lastName: Greatness
        email: geoouyudoness@gmail.com
        type: client
    type: object
    properties:
      status:
        type: integer
        format: int32
      data:
        type: array
        items:
          $ref: '#/definitions/Datum'
    required:
    - status
    - data
  Datum:
    title: Datum
    type: object
    properties:
      token:
        example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6Imdlb291eXVkb25lc3NAZ21haWwuY29tIiwiaWQiOjY2LCJpYXQiOjE1NTYzODI2MTYsImV4cCI6MTU1NjQ2OTAxNn0.EHvRjUExsMIMzt1lTt_S9PZlXvA1FBK0JUq83h2RiPk
        type: string
      firstName:
        example: Goodness
        type: string
      lastName:
        example: Greatness
        type: string
      email:
        example: geoouyudoness@gmail.com
        type: string
      type:
        example: client
        type: string
    required:
    - token
    - firstName
    - lastName
    - email
    - type
  signupinvaliddata:
    title: signupinvaliddata
    example:
      status: 400
      errors:
        firstname: First Name field is required
        lastname: Last Name field is required
        email: Email field is required
    type: object
    properties:
      status:
        type: integer
        format: int32
      errors:
        $ref: '#/definitions/Errors'
    required:
    - status
    - errors
  Errors:
    title: Errors
    type: object
    properties:
      firstname:
        type: string
      lastname:
        type: string
      email:
        type: string
    required:
    - firstname
    - lastname
    - email
  signinRequest:
    title: signinRequest
    example:
      email: idowuadeleke@gmail.com
      password: dele1989
    type: object
    properties:
      email:
        type: string
      password:
        type: string
    required:
    - email
    - password
  signinvaliddata:
    title: signinvaliddata
    example:
      status: 200
      data:
      - token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6Imlkb3d1YWRlbGVrZUBnbWFpbC5jb20iLCJpZCI6MTgsImlhdCI6MTU1NjM4Mjg0MSwiZXhwIjoxNTU2NDY5MjQxfQ.Xj4AXSIwcVJcnrMAJuQe-e_9M0VqhH4bICXRTxnF9bs
        firstName: Idowu
        lastName: Adeleke
        email: idowuadeleke@gmail.com
        type: staff
    type: object
    properties:
      status:
        type: integer
        format: int32
      data:
        type: array
        items:
          $ref: '#/definitions/Datum'
    required:
    - status
    - data
  signinwithoutemail:
    title: signinwithoutemail
    example:
      status: 400
      errors:
        email: Email field is required
    type: object
    properties:
      status:
        type: integer
        format: int32
      errors:
        $ref: '#/definitions/Errors1'
    required:
    - status
    - errors
  Errors1:
    title: Errors1
    type: object
    properties:
      email:
        type: string
    required:
    - email
  signinwithinvaliddata:
    title: signinwithinvaliddata
    example:
      status: 400
      errors:
        email: Email is invalid
        password: password field must be a string
    type: object
    properties:
      status:
        type: integer
        format: int32
      errors:
        $ref: '#/definitions/Errors3'
    required:
    - status
    - errors
  Errors3:
    title: Errors3
    type: object
    properties:
      email:
        type: string
      password:
        type: string
    required:
    - email
    - password
  CreateBankAccount:
    title: CreateBankAccount
    example:
      status: 201
      data:
      - id: 25
        accountNumber: 1401
        createdOn: 2019-04-27T16:36:44.95Z
        owner: 18
        type: savings
        status: draft
        balance: 400
    type: object
    properties:
      status:
        type: integer
        format: int32
      data:
        type: array
        items:
          $ref: '#/definitions/Datum2'
    required:
    - status
    - data
  Datum2:
    title: Datum2
    type: object
    properties:
      id:
        example: 25
        type: integer
        format: int32
      accountNumber:
        example: 1401
        type: integer
        format: int32
      createdOn:
        example: 2019-04-27T16:36:44.95Z
        type: string
      owner:
        example: 18
        type: integer
        format: int32
      type:
        example: savings
        type: string
      status:
        example: draft
        type: string
      balance:
        example: 400
        type: integer
        format: int32
    required:
    - id
    - accountNumber
    - createdOn
    - owner
    - type
    - status
    - balance
  Errors4:
    title: Errors4
    type: object
    properties:
      type:
        type: string
      balance:
        type: string
    required:
    - type
    - balance
  CreateBankAccountwithnodata:
    title: CreateBankAccountwithnodata
    example:
      status: 400
      errors:
        type: Type field is required
        balance: balance field is required
    type: object
    properties:
      status:
        type: integer
        format: int32
      errors:
        $ref: '#/definitions/Errors4'
    required:
    - status
    - errors
  GetAllBankAccounts:
    title: GetAllBankAccounts
    type: object
    properties:
      status:
        type: integer
        format: int32
      data:
        type: array
        items:
          $ref: '#/definitions/Datum3'
    required:
    - status
    - data
  Datum3:
    title: Datum3
    type: object
    properties:
      id:
        example: 3
        type: integer
        format: int32
      accountNumber:
        example: 1199
        type: integer
        format: int32
      createdOn:
        example: 2019-04-20T12:14:48.25Z
        type: string
      status:
        example: draft
        type: string
      type:
        example: savings
        type: string
      balance:
        example: 400
        type: integer
        format: int32
      email:
        example: idowuadeleke@gmail.com
        type: string
    required:
    - id
    - accountNumber
    - createdOn
    - status
    - type
    - balance
    - email
  Viewalistofallactivebankaccounts.:
    title: Viewalistofallactivebankaccounts.
    example:
      status: 200
      data:
      - id: 1
        accountNumber: 999
        createdOn: 2019-04-19T10:48:59.096Z
        status: active
        type: savings
        balance: 598
        email: aduhhdla@gmail.com
      - id: 19
        accountNumber: 801
        createdOn: 2019-04-25T11:07:44.147Z
        status: active
        type: savings
        balance: 400
        email: ges93@gmail.com
    type: object
    properties:
      status:
        type: integer
        format: int32
      data:
        type: array
        items:
          $ref: '#/definitions/Datum3'
    required:
    - status
    - data
  Viewalistofalldormantbankaccounts:
    title: Viewalistofalldormantbankaccounts
    example:
      status: 200
      data:
      - id: 2
        accountNumber: 1099
        createdOn: 2019-04-20T11:40:17.243Z
        status: dormant
        type: savings
        balance: 3119.3499999999999
        email: idowuadeleke@gmail.com
    type: object
    properties:
      status:
        type: integer
        format: int32
      data:
        type: array
        items:
          $ref: '#/definitions/Datum5'
    required:
    - status
    - data
  Datum5:
    title: Datum5
    type: object
    properties:
      id:
        example: 2
        type: integer
        format: int32
      accountNumber:
        example: 1099
        type: integer
        format: int32
      createdOn:
        example: 2019-04-20T11:40:17.243Z
        type: string
      status:
        example: dormant
        type: string
      type:
        example: savings
        type: string
      balance:
        example: 3119.3499999999999
        type: number
        format: double
      email:
        example: idowuadeleke@gmail.com
        type: string
    required:
    - id
    - accountNumber
    - createdOn
    - status
    - type
    - balance
    - email
  Errors6:
    title: Errors6
    type: object
    properties:
      type:
        type: string
    required:
    - type
  DeleteBankAccount:
    title: DeleteBankAccount
    example:
      status: 200
      message: Account successfully deleted
    type: object
    properties:
      status:
        type: integer
        format: int32
      message:
        type: string
    required:
    - status
    - message
  ActivateBankAccountRequest:
    title: ActivateBankAccountRequest
    example:
      status: active
    type: object
    properties:
      status:
        type: string
    required:
    - status
  ActivateBankAccount:
    title: ActivateBankAccount
    example:
      status: 200
      data:
      - accountNumber: 999
        status: active
    type: object
    properties:
      status:
        type: integer
        format: int32
      data:
        type: array
        items:
          $ref: '#/definitions/Datum6'
    required:
    - status
    - data
  Datum6:
    title: Datum6
    type: object
    properties:
      accountNumber:
        example: 999
        type: integer
        format: int32
      status:
        example: active
        type: string
    required:
    - accountNumber
    - status
  Errors7:
    title: Errors7
    type: object
    properties:
      updatestatus:
        type: string
    required:
    - updatestatus
  DeactivateBankAccountRequest:
    title: DeactivateBankAccountRequest
    example:
      status: dormant
    type: object
    properties:
      status:
        type: string
    required:
    - status
  DeactivateBankAccount:
    title: DeactivateBankAccount
    example:
      status: 200
      data:
      - accountNumber: 999
        status: dormant
    type: object
    properties:
      status:
        type: integer
        format: int32
      data:
        type: array
        items:
          $ref: '#/definitions/Datum6'
    required:
    - status
    - data
  DeactivateBankAccount1:
    title: DeactivateBankAccount1
    example:
      status: 400
      errors:
        updatestatus: status must be one of [dormant, active]
    type: object
    properties:
      status:
        type: integer
        format: int32
      errors:
        $ref: '#/definitions/Errors7'
    required:
    - status
    - errors
  GetaUserBankAccount:
    title: GetaUserBankAccount
    type: object
    properties:
      status:
        type: integer
        format: int32
      accounts:
        type: array
        items:
          $ref: '#/definitions/Account'
    required:
    - status
    - accounts
  Account:
    title: Account
    type: object
    properties:
      id:
        example: 3
        type: integer
        format: int32
      accountNumber:
        example: 1199
        type: integer
        format: int32
      createdOn:
        example: 2019-04-20T12:14:48.25Z
        type: string
      status:
        example: draft
        type: string
      type:
        example: savings
        type: string
      balance:
        example: 400
        type: integer
        format: int32
    required:
    - id
    - accountNumber
    - createdOn
    - status
    - type
    - balance
  CreditBankAccountRequest:
    title: CreditBankAccountRequest
    example:
      amount: 200
    type: object
    properties:
      amount:
        type: integer
        format: int32
    required:
    - amount
  CreditBankAccount1:
    title: CreditBankAccount1
    example:
      status: 200
      data:
      - transactionId: 39
        accountNumber: 1099
        amount: 200
        cashier: 21
        transactionType: credit
        accountBalance: 3319.3499999999999
    type: object
    properties:
      status:
        type: integer
        format: int32
      data:
        type: array
        items:
          $ref: '#/definitions/Datum8'
    required:
    - status
    - data
  Datum8:
    title: Datum8
    type: object
    properties:
      transactionId:
        example: 39
        type: integer
        format: int32
      accountNumber:
        example: 1099
        type: string
      amount:
        example: 200
        type: integer
        format: int32
      cashier:
        example: 21
        type: integer
        format: int32
      transactionType:
        example: credit
        type: string
      accountBalance:
        example: 3319.3499999999999
        type: number
        format: double
    required:
    - transactionId
    - accountNumber
    - amount
    - cashier
    - transactionType
    - accountBalance
  CreditBankAccount2:
    title: CreditBankAccount2
    example:
      status: 400
      errors:
        amount: amount field is must be a number
    type: object
    properties:
      status:
        type: integer
        format: int32
      errors:
        $ref: '#/definitions/Errors13'
    required:
    - status
    - errors
  Errors13:
    title: Errors13
    type: object
    properties:
      amount:
        type: string
    required:
    - amount
  DebitBankAccountRequest:
    title: DebitBankAccountRequest
    example:
      amount: 20.050000000000001
    type: object
    properties:
      amount:
        type: number
        format: double
    required:
    - amount
  DebitBankAccount:
    title: DebitBankAccount
    example:
      status: 200
      data:
      - transactionId: 41
        accountNumber: 1099
        amount: 20.050000000000001
        cashier: 21
        transactionType: debit
        accountBalance: 3279.25
    type: object
    properties:
      status:
        type: integer
        format: int32
      data:
        type: array
        items:
          $ref: '#/definitions/Datum9'
    required:
    - status
    - data
  Datum9:
    title: Datum9
    type: object
    properties:
      transactionId:
        example: 41
        type: integer
        format: int32
      accountNumber:
        example: 1099
        type: string
      amount:
        example: 20.050000000000001
        type: number
        format: double
      cashier:
        example: 21
        type: integer
        format: int32
      transactionType:
        example: debit
        type: string
      accountBalance:
        example: 3279.25
        type: number
        format: double
    required:
    - transactionId
    - accountNumber
    - amount
    - cashier
    - transactionType
    - accountBalance
  GetaSpecificTransactionDetail:
    title: GetaSpecificTransactionDetail
    example:
      status: 200
      data:
      - id: 1
        accountNumber: 999
        createdOn: 2019-04-20T15:54:49.193Z
        type: debit
        amount: 2
        oldBalance: 400
        newBalance: 398
    type: object
    properties:
      status:
        type: integer
        format: int32
      data:
        type: array
        items:
          $ref: '#/definitions/Datum10'
    required:
    - status
    - data
  Datum10:
    title: Datum10
    type: object
    properties:
      id:
        example: 1
        type: integer
        format: int32
      accountNumber:
        example: 999
        type: string
      createdOn:
        example: 2019-04-20T15:54:49.193Z
        type: string
      type:
        example: debit
        type: string
      amount:
        example: 2
        type: integer
        format: int32
      oldBalance:
        example: 400
        type: integer
        format: int32
      newBalance:
        example: 398
        type: integer
        format: int32
    required:
    - id
    - accountNumber
    - createdOn
    - type
    - amount
    - oldBalance
    - newBalance
  GetaSpecificTransactionDetail1:
    title: GetaSpecificTransactionDetail1
    example:
      status: 400
      errors:
        type: transaction id must be an integer
    type: object
    properties:
      status:
        type: integer
        format: int32
      errors:
        $ref: '#/definitions/Errors6'
    required:
    - status
    - errors
  GetAccountTransactionHistory:
    title: GetAccountTransactionHistory
    example:
      status: 200
      data:
      - id: 1
        accountNumber: 999
        createdOn: 2019-04-20T15:54:49.193Z
        type: debit
        amount: 2
        oldBalance: 400
        newBalance: 398
      - id: 2
        accountNumber: 999
        createdOn: 2019-04-20T15:56:15.463Z
        type: debit
        amount: 2
        oldBalance: 400
        newBalance: 398
      - id: 3
        accountNumber: 999
        createdOn: 2019-04-20T15:58:59.887Z
        type: debit
        amount: 2
        oldBalance: 400
        newBalance: 398
      - id: 4
        accountNumber: 999
        createdOn: 2019-04-20T15:59:22.74Z
        type: debit
        amount: 2
        oldBalance: 400
        newBalance: 398
      - id: 5
        accountNumber: 999
        createdOn: 2019-04-20T15:59:42.351Z
        type: debit
        amount: 2
        oldBalance: 398
        newBalance: 396
      - id: 6
        accountNumber: 999
        createdOn: 2019-04-20T16:05:14.287Z
        type: debit
        amount: 2
        oldBalance: 396
        newBalance: 394
      - id: 7
        accountNumber: 999
        createdOn: 2019-04-20T16:05:47.804Z
        type: debit
        amount: 2
        oldBalance: 394
        newBalance: 392
      - id: 8
        accountNumber: 999
        createdOn: 2019-04-20T16:08:22.838Z
        type: credit
        amount: 2
        oldBalance: 392
        newBalance: 394
      - id: 9
        accountNumber: 999
        createdOn: 2019-04-20T16:08:28.606Z
        type: credit
        amount: 2
        oldBalance: 394
        newBalance: 396
      - id: 10
        accountNumber: 999
        createdOn: 2019-04-20T16:08:32.733Z
        type: credit
        amount: 2
        oldBalance: 396
        newBalance: 398
      - id: 38
        accountNumber: 999
        createdOn: 2019-04-27T15:36:34.266Z
        type: credit
        amount: 200
        oldBalance: 398
        newBalance: 598
    type: object
    properties:
      status:
        type: integer
        format: int32
      data:
        type: array
        items:
          $ref: '#/definitions/Datum10'
    required:
    - status
    - data
  Admincancreateadminorstaffaccount:
    title: Admincancreateadminorstaffaccount
    example:
      status: 401
      error: only admin can create staff or admin account
    type: object
    properties:
      status:
        type: integer
        format: int32
      error:
        type: string
    required:
    - status
    - error
  Admincancreateadminorstaffaccount1:
    title: Admincancreateadminorstaffaccount1
    example:
      status: 201
      data:
      - token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6ImdvMjJvZGFkbWluQGdtYWlsLmNvbSIsImlkIjo3MSwiaWF0IjoxNTU2Mzg0MTk3LCJleHAiOjE1NTY0NzA1OTd9.mGezZDpIkB8UL6tT1T4M-mDscnDayh9mVb25WQuJs94
        firstName: Good
        lastName: Great
        email: go22odadmin@gmail.com
        type: staff
    type: object
    properties:
      status:
        type: integer
        format: int32
      data:
        type: array
        items:
          $ref: '#/definitions/Datum'
    required:
    - status
    - data
  Admincancreateadminorstaffaccount2:
    title: Admincancreateadminorstaffaccount2
    example:
      status: 400
      errors:
        firstname: First Name field is required
        lastname: Last Name field is required
        email: Email field is required
        password: Password field is required
        type: Type field is required
        isAdmin: isAdmin field must be a boolean value and is required
    type: object
    properties:
      status:
        type: integer
        format: int32
      errors:
        $ref: '#/definitions/Errors16'
    required:
    - status
    - errors
  Errors16:
    title: Errors16
    type: object
    properties:
      firstname:
        type: string
      lastname:
        type: string
      email:
        type: string
      password:
        type: string
      type:
        type: string
      isAdmin:
        type: string
    required:
    - firstname
    - lastname
    - email
    - password
    - type
    - isAdmin
  usercanresetpasswordRequest:
    title: usercanresetpasswordRequest
    example:
      password: dele1989
      confirmPassword: dele1989
    type: object
    properties:
      password:
        type: string
      confirmPassword:
        type: string
    required:
    - password
    - confirmPassword
  usercanresetpassword:
    title: usercanresetpassword
    example:
      status: 400
      errors:
        password: password field must be a string
        confirmPassword: password and confirm password must be the same
    type: object
    properties:
      status:
        type: integer
        format: int32
      errors:
        $ref: '#/definitions/Errors17'
    required:
    - status
    - errors
  Errors17:
    title: Errors17
    type: object
    properties:
      password:
        type: string
      confirmPassword:
        type: string
    required:
    - password
    - confirmPassword
  usercanresetpassword1:
    title: usercanresetpassword1
    example:
      status: 200
      data:
      - newPassword: dele1989
    type: object
    properties:
      status:
        type: integer
        format: int32
      data:
        type: array
        items:
          $ref: '#/definitions/Datum13'
    required:
    - status
    - data
  Datum13:
    title: Datum13
    type: object
    properties:
      newPassword:
        example: dele1989
        type: string
    required:
    - newPassword
tags:
- name: Auth
- name: Accounts
- name: Transactions
- name: User
